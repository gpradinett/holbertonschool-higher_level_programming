=============================
The ``0-add_integer`` module
=============================

Using ``add_integer``
---------------------

Import the function:

	>>> add_integer = __import__('0-add_integer').add_integer

Basic cases on success:
	>>> add_integer(1, 2)
	3

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(4, "School")
	Traceback (most recent call last):
        TypeError: b must be an integer

	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'
	
	>>> add_integer(str(HOLA))
	Traceback (most recent call last):
	NameError: name 'HOLA' is not defined

	>>> add_integer(float(50), 10)
	60

	>>> add_integer(-150.50, int(n))
	Traceback (most recent call last):
	NameError: name 'n' is not defined

	>>> add_integer(list(abc), def)
	Traceback (most recent call last):
	SyntaxError: invalid syntax

	>>> add_integer(-, *)
	Traceback (most recent call last):
	SyntaxError: invalid syntax

	>>> add_integer(-6,5)
	-1

	>>> add_integer(2.5,3)
	5

	>>> add_integer(4+4,5+5)
	18

	>>> add_integer(0,0)
	0

	>>> add_integer(True, 5)
        Traceback (most recent call last):
        TypeError: a must be an integer

	>>> add_integer((5, 5), 5)
        Traceback (most recent call last):
        TypeError: a must be an integer

	>>> add_integer(float('nan'))
    	Traceback (most recent call last):
    	ValueError: cannot convert float NaN to integer

	>>> add_integer(1000e1000)
    	Traceback (most recent call last):
    	OverflowError: cannot convert float infinity to integer

	>>> add_integer(2)
	100
