=============================
The ``0-add_integer`` module
=============================

Using ``add_integer``
---------------------

Import the function:

	>>> add_integer = __import__('0-add_integer').add_integer

Basic cases on success:

	>>> add_integer(2, 2)
	4

	>>> add_integer(1, 9.3)
    	10

	>>> add_integer(3, -1)
    	2

Double negative float input:

    	>>> add_integer(-2, -1)
    	-3

Double float:

    	>>> add_integer(10.0, 2.0)
    	12

Passing agruments that are not of type int, like: lists, set, tuples, bool and dictionary:

	Passing a list as argument 'a':

	>>> add_integer([55], 5)
	Traceback (most recent call last):
        ...
        TypeError: a must be an integer

	Passing a tuple as argument 'a':

	>>> add_integer((5, 5), 5)
	Traceback (most recent call last):
        ...
        TypeError: a must be an integer

	Passing a set as argument 'b':

	>>> add_integer(5, {"apple"})
	Traceback (most recent call last):
        ...
        TypeError: b must be an integer

	Passing a dictionary as argument 'b':
	
	>>> add_integer(5, {"Julian", 25})
	Traceback (most recent call last):
        ...
        TypeError: b must be an integer

	Passing a bool as argument 'a':
	
	>>> add_integer(True, 5)
	Traceback (most recent call last):
        ...
        TypeError: a must be an integer

None case (nothing is pass as argument):

	Not passing anything:

	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	Passing 'a' and 'b' as None:

	>>> add_integer(None, None)
	Traceback (most recent call last):
        ...
        TypeError: a must be an integer

	Passing 'a' as None:

        >>> add_integer(None, 5)
        Traceback (most recent call last):
        ...
        TypeError: a must be an integer

	Passing 'b' as None:

	>>> add_integer(5, None)
	Traceback (most recent call last):
        ...
        TypeError: b must be an integer

Testing spaces arguments (syntax error):

	>>> add_integer( , )
	Traceback (most recent call last):
	...	
	SyntaxError: invalid syntax

Testing no arguments:

	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Double string input:
 	>>> add_integer("holberton", "school")
	Traceback (most recent call last):
    	...
    	TypeError: a must be an integer
