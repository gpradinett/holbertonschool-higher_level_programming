=============================
Using ``matrix_divided``
=============================

Import the function:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Basic usage:
	 >>> matrix_divided()
        Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided(None)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided(["hola", "mundo"], 0)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[]], None)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[140, 43.432, 0]], str(100))
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 1)
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

	>>> matrix_divided([[8, 3, 2],[1, 5, 6]], -2)
	[[-4.0, -1.5, -1.0], [-0.5, -2.5, -3.0]]

	>>> matrix_divided([["Bug", 20, 30],[40, 50, "/"]], 5)
	Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats
