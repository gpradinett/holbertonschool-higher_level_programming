=============================
Using ``matrix_divided``
=============================

Import the function:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Basic usage:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -5)
    [[-0.2, -0.4, -0.6], [-0.8, -1.0, -1.2]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2.5)
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

Negative variables in list inputs:
    >>> matrix = [[1, 2, -3], [4, 5, -6]]
    >>> print(matrix_divided(matrix, 2))
    [[0.5, 1.0, -1.5], [2.0, 2.5, -3.0]]


Zero "div" input:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[4, 2], [2, 2]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test only one argument:

    >>> matrix_divided([[2, 2], [2, 2]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided( , 7)
    Traceback (most recent call last):
    ...
    SyntaxError: invalid syntax
